{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/richardjohn/Desktop/zip-search/src/components/fetchZipsResult.js\";\nimport React, { Component } from 'react';\nimport FetchZips from './fetchZips';\n\nclass FetchZipsResult extends Component {\n  constructor() {\n    super();\n\n    this.allZipCodes = async zipCode => {\n      try {\n        const link = \"https://ctp-zip-api.herokuapp.com/zip/\" + zipCode;\n        const result = await fetch(link);\n        console.log(result);\n\n        if (result.status !== 200) {\n          throw new Error(\"Entered ZipCode is not valid.\");\n        }\n\n        const res = await result.json();\n        this.setState({\n          place: res,\n          error: false\n        });\n        document.getElementById(\"zipValidity\").innerHTML = \"Entered ZipCode is valid.\";\n        console.log(res);\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          error: true\n        });\n        document.getElementById(\"zipValidity\").innerHTML = \"You entered an invalid ZipCode.\";\n      }\n    };\n\n    this.handleZipChange = entry => {\n      let n = entry.target.name;\n      let v = entry.target.value;\n      this.setState({\n        [n]: v\n      });\n      this.allZipCodes(v);\n    };\n\n    this.state = {\n      place: [],\n      zipCode: \"\",\n      error: false,\n      zips: []\n    };\n  }\n\n  async componentDidMount() {\n    document.getElementById(\"zipValidity\").innerHTML = \"Find Cities within an entered ZipCode: \";\n    document.getElementById(\"cityValidityCity\").innerHTML = \"\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FetchZips, {\n        handleZipChange: this.handleZipChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fetching\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"ZipCode Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), this.state.place.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"City: \", item.City, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 47\n            }, this), \"State: \", item.State, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 49\n            }, this), \"Population (Estimated): \", item.EstimatedPopulation, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 79\n            }, this), \"Total Wages: $\", item.TotalWages + '.00', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 68\n            }, this), \"Country: \", item.Country, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 52\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 62\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FetchZipsResult;","map":{"version":3,"sources":["/Users/richardjohn/Desktop/zip-search/src/components/fetchZipsResult.js"],"names":["React","Component","FetchZips","FetchZipsResult","constructor","allZipCodes","zipCode","link","result","fetch","console","log","status","Error","res","json","setState","place","error","document","getElementById","innerHTML","handleZipChange","entry","n","target","name","v","value","state","zips","componentDidMount","render","map","item","index","City","State","EstimatedPopulation","TotalWages","Country"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport FetchZips from './fetchZips'\n\nclass FetchZipsResult extends Component{\n    constructor(){\n        super();\n        this.state = {\n            place: [],\n            zipCode: \"\",\n            error: false,\n            zips: []\n        }\n    }\n    async componentDidMount() {\n        document.getElementById(\"zipValidity\").innerHTML = \"Find Cities within an entered ZipCode: \";\n        document.getElementById(\"cityValidityCity\").innerHTML = \"\";\n    }\n    allZipCodes = async (zipCode) => {\n        try{\n            const link = \"https://ctp-zip-api.herokuapp.com/zip/\" + zipCode;\n            const result = await fetch(link);\n            console.log(result);\n            if(result.status !== 200){\n                throw new Error(\"Entered ZipCode is not valid.\");\n            }\n            const res = await result.json();\n            this.setState({\n                place: res,\n                error: false\n            })\n            document.getElementById(\"zipValidity\").innerHTML = \"Entered ZipCode is valid.\";\n            console.log(res);\n        }\n        catch(error){\n            console.log(error);\n            this.setState({error: true})\n        document.getElementById(\"zipValidity\").innerHTML = \"You entered an invalid ZipCode.\";\n        }\n    } \n    handleZipChange = (entry) => {\n        let n = entry.target.name;\n        let v = entry.target.value; \n        this.setState({\n            [n]: v\n        }) \n        this.allZipCodes(v);\n    }\n    render(){\n        return(\n            <div>\n                <FetchZips handleZipChange = {this.handleZipChange}/>\n                {\n                    \n                    (<fieldset className = \"box\"><div className = \"fetching\">\n                        <b>ZipCode Search</b>\n                        {this.state.place.map((item, index) =>\n                        <div key = {index}>\n                            City: {item.City} <br></br>\n                            State: {item.State} <br></br>\n                            Population (Estimated): {item.EstimatedPopulation}<br></br>\n                            Total Wages: ${item.TotalWages + '.00'}<br></br>\n                            Country: {item.Country}<br></br> <br></br>\n                        </div>\n                        )}\n                    </div></fieldset>)\n                }\n            </div>\n        )\n    }\n}\n\nexport default FetchZipsResult;"]},"metadata":{},"sourceType":"module"}